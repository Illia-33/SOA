openapi: 3.0.3
info:
  title: Profile Service API
  description: REST API for user profile registration, authentication, and profile management.
  version: "1.0.0"

servers:
  - url: http://localhost:8080/api/v1

paths:
  /profile:
    post:
      summary: Register a new profile
      operationId: registerProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterProfileRequest'
      responses:
        "200":
          description: Profile successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterProfileResponse'
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /profile/{profile_id}:
    get:
      summary: Get profile information
      operationId: getProfile
      parameters:
        - name: profile_id
          in: path
          required: true
          description: Unique profile identifier
          schema:
            type: string
      responses:
        "200":
          description: Profile information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfileResponse'
        "400":
          description: Invalid profile_id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Edit profile
      operationId: editProfile
      security:
        - bearerAuth: []
        - soaTokenAuth: []
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditProfileRequest'
      responses:
        "200":
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized (missing or invalid token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden (insufficient permissions)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete profile
      operationId: deleteProfile
      security:
        - bearerAuth: []
        - soaTokenAuth: []
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        "401":
          description: Unauthorized (missing or invalid token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden (insufficient permissions)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth:
    post:
      summary: Authenticate user
      operationId: authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequest'
      responses:
        "200":
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticateResponse'
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api_token:
    post:
      summary: Create API token
      operationId: createApiToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenRequest'
      responses:
        "200":
          description: API token created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApiTokenResponse'
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Invalid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden (insufficient permissions)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    RegisterProfileRequest:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
          format: password
        email:
          type: string
          format: email
        phone_number:
          type: string
        name:
          type: string
        surname:
          type: string
      required: [login, password, email, phone_number, name, surname]

    RegisterProfileResponse:
      type: object
      properties:
        profile_id:
          type: string

    GetProfileResponse:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        birthday:
          type: string
          format: date
        bio:
          type: string

    EditProfileRequest:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        birthday:
          type: string
          format: date
        bio:
          type: string

    AuthenticateRequest:
      type: object
      properties:
        login:
          type: string
        email:
          type: string
          format: email
        phone_number:
          type: string
        password:
          type: string
          format: password
      required: [password]

    AuthenticateResponse:
      type: object
      properties:
        token:
          type: string

    CreateApiTokenRequest:
      type: object
      properties:
        auth:
          $ref: '#/components/schemas/AuthenticateRequest'
        read_access:
          type: boolean
        write_access:
          type: boolean
        ttl:
          type: string
          description: Token lifetime (e.g., "1h", "24h")
          example: "24h"
      required: [auth, read_access, write_access, ttl]

    CreateApiTokenResponse:
      type: object
      properties:
        token:
          type: string

    EmptyResponse:
      type: object
      description: Empty response ({})

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Machine-readable error code
          example: invalid_input
        message:
          type: string
          description: Human-readable error message
          example: Email is required

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    soaTokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: |
        Use long-lived API tokens with the format:
        ```
        Authorization: SoaToken <API_KEY>
        ```
